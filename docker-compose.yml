version: '3.8'

services:
  crypto-trading-bot:
    build: .
    container_name: crypto-trading-bot
    restart: unless-stopped
    environment:
      # Binance API Configuration
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY}
      - BINANCE_TESTNET=${BINANCE_TESTNET:-true}
      
      # Trading Configuration
      - DEFAULT_SYMBOL=${DEFAULT_SYMBOL:-BTCUSDT}
      - TRADE_PERCENTAGE=${TRADE_PERCENTAGE:-5.0}
      - MAX_DAILY_TRADES=${MAX_DAILY_TRADES:-10}
      - STOP_LOSS_PERCENTAGE=${STOP_LOSS_PERCENTAGE:-2.0}
      - TAKE_PROFIT_PERCENTAGE=${TAKE_PROFIT_PERCENTAGE:-5.0}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=${LOG_FILE:-logs/trading_bot.log}
      
      # Python Configuration
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    networks:
      - crypto-trading-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('https://api.binance.com/api/v3/ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add monitoring service
  monitoring:
    image: grafana/grafana:latest
    container_name: crypto-trading-monitoring
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - crypto-trading-network
    depends_on:
      - crypto-trading-bot

networks:
  crypto-trading-network:
    driver: bridge

volumes:
  grafana-storage: 